name: Azure Example Workflow

# This workflow triggers on every push to the main branch
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner with Node.js 20

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      # Step 2: Log in to Azure using the service principal credentials stored in GitHub secrets
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CRED }}

      # Step 3: Set up kubectl to interact with the Kubernetes cluster
      - name: Setup kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      # Step 4: Retrieve AKS credentials to configure kubectl
      - name: Retrieve AKS Credentials
        run: az aks get-credentials --resource-group Sysdig-RG --name sysdig-demo

      # Step 5: List the nodes in the AKS cluster to verify the connection
      - name: List AKS Nodes
        run: kubectl get nodes

    - name: Install Sysdig CLI
      run: |
        curl -s -o /usr/local/bin/scanner-cli https://download.sysdig.com/stable/cli/scanner-cli
        chmod +x /usr/local/bin/scanner-cli
      
    - name: Pull Docker image
      run: docker pull dockersamples/examplevotingapp_vote:latest

    - name: Scan Docker image with Sysdig
      run: |
        scanner-cli scan --apiurl ${{ secrets.SYSDIG_ENDPOINT }} --token ${{ secrets.SYSDIG_API_TOKEN }} dockersamples/examplevotingapp_vote:latest

      # # Step 6: Deploy the resources defined in the Kubernetes manifest files
      # - name: Deploy Resources to AKS
      #   run: kubectl apply -f k8s-specifications/

      # Step 7: Promote to production or perform additional steps
      - name: Promote to Production
        run: |
          # Example: Switch traffic or perform post-deployment tasks
          echo "Promoting to production..."
